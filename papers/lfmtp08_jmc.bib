@article{Chapman200921,
title = "Type Theory Should Eat Itself ",
journal = "Electronic Notes in Theoretical Computer Science ",
volume = "228",
number = "",
pages = "21 - 36",
year = "2009",
note = "Proceedings of the International Workshop on Logical Frameworks and Metalanguages: Theory and Practice (LFMTP 2008) ",
issn = "1571-0661",
doi = "http://dx.doi.org/10.1016/j.entcs.2008.12.114",
url = "http://www.sciencedirect.com/science/article/pii/S157106610800577X",
author = "James Chapman",
keywords = "big-step normalisation",
keywords = "typed syntax",
keywords = "type theory",
keywords = "Agda",
keywords = "explicit substitutions ",
abstract = "In this paper I present a partial formalisation of a normaliser for type theory in Agda [Ulf Norell. Agda 2, 2007. http://www.cs.chalmers.se/~ulfn/]; extending previous work on big-step normalisation [Thorsten Altenkirch and James Chapman. Big-Step Normalisation. Journal of Functional Programming, 2008. Special Issue on Mathematically Structured Functional Programming. To appear, Thorsten Altenkirch and James Chapman. Tait in one big step. In Workshop on Mathematically Structured Functional Programming, \{MSFP\} 2006, Kuressaare, Estonia, July 2, 2006, electronic Workshop in Computing (eWiC), Kuressaare, Estonia, 2006. The British Computer Society (BCS)]. The normaliser in written as an environment machine. Only the computational behaviour of the normaliser is presented omitting details of termination. "
}

